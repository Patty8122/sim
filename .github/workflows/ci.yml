name: CI

on:
  push:
    branches: 
      - main
      - feat/docker-pull 
  pull_request:
    branches: 
      - main
      - feat/docker-pull 
      
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './sim/package-lock.json'
          
      - name: Install dependencies
        working-directory: ./sim
        run: npm ci
        
      - name: Run tests with coverage
        working-directory: ./sim
        env:
          NODE_OPTIONS: "--no-warnings"
        run: npm run test:coverage
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./sim/coverage
          fail_ci_if_error: false
          verbose: true 

  build-and-push-image:
    needs: test # This job depends on the "test" job succeeding
    runs-on: ubuntu-latest

    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Log in to the Container registry using the account and password that will publish the packages.
      # Once published, the packages are scoped to the account defined here.
      - name: Log in to GitHub Package Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # This step helps tag Docker images dynamically based on Git metadata (https://github.com/docker/metadata-action#about)
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch

      # This step uses the `docker/build-push-action` action to build the
      # image, based on your repository's `Dockerfile`. If the build succeeds,
      # it pushes the image to GitHub Packages. (https://github.com/docker/build-push-action#usage)
      # It uses the `tags` and `labels` parameters to tag and label the image
      # with the output from the "meta" step.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max